Java集合:
！7.HashMap的扩容过程？ 会发生什么问题？
！hashMap原理,put和resize过程
JDK1.8有哪些新特性（lambda简化匿名内部类，接口default方法，流操作stream函数式编程，Optional类简化了处理null值）
！对象一定分配在堆上么，JIT，分层编译，逃逸分析
！来问一些java基础，jvm内存空间有了解吗？Integer a= new Integer(1), Integer b= new Integer(1) 相等吗？为什么相等？(没答上来, 只知道是-128,127 之间会相等, 具体不知道, 校招时候回答了很多遍, 现在又忘了) 详情见：https://blog.csdn.net/u011130764/article/details/103480865?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-103480865-blog-121022751.pc_relevant_multi_platform_whitelistv1_exp2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-103480865-blog-121022751.pc_relevant_multi_platform_whitelistv1_exp2&utm_relevant_index=1
！使用hashmap时重写哪两个方法，为什么要重写，什么场景下重写

有没有想过为什么会有这么多的编码格式。
讲一下常见编码方式？ 编码的意义：计算机中存储的最小单元是一个字节即8bit，所能表示的字符范围是255个， 而人类要表示的符号太多，无法用一个字节来完全表示，固需要将符号编码，将各种语言翻 译成计算机能懂的语言。
1）ASCII码：总共128个，用一个字节的低7位表示，0〜31控制字符如换回车删除等；32~126是打印字符，可通过键盘输入并显示出来；
2）ISO-8859-1,用来扩展ASCII编码，256个字符，涵盖了大多数西欧语言字符。
3）GB2312:双字节编码，总编码范围是A1-A7,A1-A9是符号区，包含682个字符，B0-B7是 汉字区，包含6763个汉字；
4）GBK为了扩展GB2312,加入了更多的汉字，编码范围是8140~FEFE，有23940个码位，能 表示21003个汉字。
5）UTF-16: ISO试图想创建一个全新的超语言字典，世界上所有语言都可通过这本字典Unicode来相互翻译，而UTF-16定义了Unicode字符在计算机中存取方法，用两个字节来表 示Unicode转化格式。不论什么字符都可用两字节表示，即16bit，固叫UTF-16。
6）UTF-8：UTF-16统一采用两字节表示一个字符，但有些字符只用一个字节就可表示，浪 费存储空间，而UTF-8采用一种变长技术，每个编码区域有不同的字码长度。 不同类型的 字 符 可 以 由1~6个 字 节 组 成。
3、utf-8编码中的中文占几个字节；int型几个字节？utf-8是一种变长编码技术，utf-8编码中的中文占用的字节不确定，可能2个、3个、4个，int型占4个字节。
new一个对象，从底层来说会发生什么；
new一个HashMap，for循环put进入10000个数据会发什么；
！Stringbuffer Stringbuilder的区别（String对象做拼接操，在JDK1.5之前会转换为StringBuffer的连续append操作，但是在JDK1.5之后将会转换为StringBuilder。
                                 原因是JDK1.5之后对锁机制进行了优化，在单个线程中，经过“逃逸分析”算法确定累加操作不会逃出当前方法所在作用域时，将会去除StringBuffer append操作时的锁行为（在解释运行时仍会加锁，在编译过程中会去锁）所以经过去锁之后的append实则为StringBuild。（HotSport虚拟机实现是这样。）详情请参考《深入理解JVM虚拟机》）
！了解java的哪些字符串对象 讲讲hashmap

！6、谈谈你对解析与分派的认识。 解析指方法在运行前，即编译期间就可知的，有一个确定的版本，运行期间也不会改变。解析是静态的，在类加载的解析阶段就可将符号引用转变成直接引用。
！分派可分为静态分派和动态分派，重载属于静态分派，覆盖属于动态分派。静态分派是指在重载时通过参数的静态类型而非实际类型作为判断依据，在编译阶段，编译器可根据参数的静态类型决定使用哪一个重载版本。动态分派则需要根据实际类型来调用相应的方法。
！7、修改对象A的equals方法的签名，那么使用HashMap存放这个对象实例的时候，会调
用哪个equals方***调用对象的equals方法，如果对象的equals方法没有被重写，equals方法和==都是比较 栈内局部变量表中指向堆内存地址值是否相等。
8、Java中实现多态的机制是什么？ 多态是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编 译时不确定，在运行期间才确定，一个引用变量到底会指向哪个类的实例。这样就可以不用 修改源程序，就可以让引用变量绑定到各种不同的类实现上。Java实现多态有三个必要条件： 继承、重定、向上转型，在多态中需要将子类的引用赋值给父类对象，只有这样该引用才能 够具备调用父类方法和子类的方法。
！hashmap原理，put和get，为什么是8转红黑树，红黑树节点添加过程，什么时候扩容，为什么是0.75，扩容步骤，为什么分高低位，1.7到1.8有什么优化，hash算法做了哪些优化，头插法有什么问题，为什么线程不安全
arraylist原理，为什么数组加transient，add和get时间复杂度，扩容原理，和linkedlist区别，原理，分别在什么场景下使用，为什么
！2.Java的Map有哪些实现类，分别简要介绍一下
！3.说一下HashMap的原理，为什么用链地址去解决冲突，为什么用红黑树
！HashMap 1.8的安全问题：https://blog.csdn.net/m0_60907200/article/details/123443149，1.7的安全问题：https://blog.csdn.net/Dongguabai/article/details/115606801


java object有哪些方法（hashcode equals notify wait）
！Hashcode 和 equals有哪些区别呢 什么场景下使用呢
！重写一个对象的hashcode和equals怎么权衡 hashcode一定要重写吗
！Hashmap的put操作是怎么做的 哈希操作是如何进行的呢
初始化容量的问题：https://developer.51cto.com/article/660220.html



ES:
9.ES 怎么用的？数据量级多少？为什么用ES 不用Hbase？
7.es的写入，查询过程，底层实现，为什么这么设计
8.es集群，脑裂问题，怎么产生的，如何解决
1.es倒排索引，原理，lucene，分词，分片，副本
2.es写数据原理，数据实时么，为什么不实时，会丢数据么，segment，cache，buffer，translog关系
3.es深度分页，优化





其他问题：
linux常用指令

1.死锁的四个必要条件
2.如何避免死锁？
3.如何检测死锁？

三面(HRBP)：
1.离职原因；
2.用三个词评价一下你的领导；
3.未来规划；
4.你有什么缺点；
5.遇到过最大的问题；

滴滴一面整体上 全是项目 和 场景考虑，因为他们是用go开发，我之前是用Java，所以一直在问中间件，没有Java八股文，不过中间件问的蛮深，面试体验很好；
网易因为是使用Java的，所以Spring问的比较多，一面比较贴合实际，都是面试官开发中常见的问题；二面对项目整体做个梳理和一些中间件知识；三面从架构和优化，压测等角度去问看看广度和高度吧主要；
什么场景下需要用到分布式
springcloud，注册中心原理，配置中心原理，dubbo服务发现，熔断限流。

计算机网络：
用户从输入URL到看到浏览器展示结果，经过了哪些过程？越详细越好
TCP和IP报文是否会分片，分别在什么情况下会分片，TCP分包之后是否还会进行ip分片
讲一下OSI七层模型，每层的作用，wifi属于哪一层
OSI七层协议和TCP/IP五层协议有什么区别？TCP/UDP在哪一层？对TCP了解多少？
了解哪些加密、解密算法？
1.tcp和udp的区别，tcp怎么保证可靠连接的，出现网络拥塞怎么解决
2.tcp和udp的报文结构了解么
epoll和poll的区别，及其应用场景.select和epoll都是I/O多路复用的方式，但是select是通过不断轮询监听socket实现，epoll是当socket有变化时通过回掉的方式主动告知用户进程实现
参考文章:https://www.cnblogs.com/hsmwlyl/p/10652503.html
8. HTTP有哪些问题，加密算法有哪些，针对不同加密方式可能产生的问题，及其
HTTPS是如何保证安全传输的
HTTP的不足：
通信使用明文，内容可能会被窃听；
不验证通信方的身份，因此有可能遭遇伪装；
无法证明报文的完整性，有可能已遭篡改；
常用加密算法：MD5算法、DES算法、AES算法、RSA算法 见：https://segmentfault.com/a/1190000023445325
TCP链接如何保存？如果有十几万条连接怎么进行存储优化？如何检查哪条连接不可用？听说过一个叫XXX方案吗？(英文, 不记得了) , 我给你简单介绍下, 面试官开始表演…, 你有兴趣自己再去了解下
8.http协议有什么特点？
9.项目中有调用其他web端口没？
10.get和post请求的区别？
说一下计算机网络的七层模型
TCP 和 UDP 有什么区别
说一下常用的 I/O 模型
TCP 保证可靠传输的机制
线程进程，怎么进行上下文切换的，进程切换的过程？中断？谁去执行中断呢？
讲一讲内存分页，怎么进行内存分页
说一下OSI 模型，TCP/IP 模型说一下每一层的协议：应用层：HTTP FTP DNS SMTP
传输层UDP/TCP
网络层IP
DNS 是基于传输层的什么协议的？
TCP 和 UDP 的区别？
TCP 怎么保证到达的数据是有序的？
1.RPC和HTTP的区别
你们基于tcp吗 http吗 用的什么http框架
tcp三次握手，四次挥手，超级详细，尤其是第四次挥手
tcp和udp，详细介绍udp，报文大小多少，为啥。http 数据包大小，为啥。
http常用状态吗，502是啥
https加密的详细过程
http常用状态吗  502？
网络拥塞现象排查，为啥网络传递越来越快（慢开始算法）
Linux用得比较多的命令
Grep怎么高亮
linux去重命令
了解进程 线程 协程吗
内核态、用户态的区别
了解常用的加密算法吗
你们项目中有用到加密吗
MD5算法是什么加密算法 有公私钥吗
操作系统调度算法和饥饿问题
操作系统虚拟内存，虚拟地址。
epoll底层，水平，边缘
8.操作系统怎么进行端口映射
9.操作系统内存管理
10.linux命令查询topk问题，全局替换问题
tcp四次挥手深问
32位操作系统里进程可以分配内存大小，为什么。
epoll底层数据结构，原理
生产遇到问题及解决方案
linux命令 如top  sed
epoll底层原理，水平，边缘
操作系统虚拟内存，虚拟地址深问
Linux用得比较多的命令
Grep怎么高亮
linux去重命令
怎么查出哪个进程占用了8080端口 部署在哪个路径下
了解进程 线程 协程吗
内核态、用户态的区别
了解常用的加密算法吗
你们项目中有用到加密吗
MD5算法是什么加密算法 有公私钥吗
常见的HTTP请求头有哪些，User-Agent的作用

io 模型了解么，多路复用，selete，poll，epoll，epoll 的结构，怎么注册事件，et和lt模式
7、网络这块熟么，说一下socket编程吧。说了一下java的socket。
8、网络编程的NIO和BIO区别，阻塞指的是什么意思呢。
9、socket客户端和服务端的连接过程和通信过程说一下。
5.怎么理解高可用，如何保证高可用，有什么弊端，熔断机制，怎么实现
6.对于高并发怎么看，怎么算高并发，你们项目有么，如果有会产生什么问题，怎么解决

准备思路就是三块：0 简历 1 技术（主要是看书）2 项目 3 leetcode（不过社招考察的不多其实）
简历
简历首先决定了你有没有面试机会 其次还决定了面试时面试官会怎么提问你 我觉得多花些时间在简历上边还是挺重要的，一开始我也是很嫌弃认真写简历，不过后面投多几家石沉大海 你就会知道简历需要好好写了 不过不用指望自己能憋两三天就把简历写出来 可以边面试边改善 这样比较有感觉 也容易
技术
因为我是java系，看的书如下：深入理解java虚拟机、redis设计与实现、从paxos到zookeeper、apache kafka实战、java并发编程的艺术、mysql技术内幕。看的时候其实看得也挺快的 主要就是泛泛的看一遍 感觉特别重要的才会比较认真看 也可以先上面对着这几个方面留意一下比较常见的面试题，然后再来有针对性的看书会好一些
项目
项目的话 其实就两方面，一方面是你简历上写的东西 对你简历上写的东西要特别熟悉 不然很容易被问穿 这就会有些尴尬 当然如果做的项目确实比较简单 也应该适当包装一下（比如无中生有，不然有时简历关都过不了 不过对于无中生有的部分也需要比较熟悉就是了） 然后工作一两年的建议就别写精通XXX了 我一般就是了解、熟悉；好像跑偏了，除了简历上的东西，另一方面会问你一些有关你们系统的开放性问题，这就需要你平时对你们系统有一些了解，比如你们生产有多少台机器、数据库怎样部署的之类的，这些就需要平时积累 如果平时没积累，就多找熟悉的同事问问（这里要谢谢欢哥，我的面试经理）
leetcode
我反正直接躺平 一开始还会每天刷一道medium 后面直接两三天挑一道easy 就保持手感 因为没有面字节 所以以前的老本倒也够用了

一周了解技术用途，一周做demo，一周学里面的模块，再用一周改demo。后面就缺啥补啥。
面完八股文，邮箱会发一个伯乐笔试地址，电话沟通屏幕共享，面试官出题目做，不需要现场跑通。没有，就相当于一个共享记事本，代码都运行不起来。

对公司了解吗 事后有去了解过吗
为什么想离开现在的公司
想去哪些类型的公司 为什么 有什么期望
在工作中遇到最大的难题 怎么解决的
作为技术 最讨厌什么
为什么不想去bat 有和同事了解过吗
对于这个岗位进来要做的东西 了解吗
现在薪资多少 期望薪资多少

平时有了解什么新技术吗
对于新环境预计多久能上手
有什么要问我的吗
你们加班程度怎样 对于加班怎么看
面试情况 如何考虑
对于微众的了解

腾讯特别喜欢操作系统和网络，字节和虾皮喜欢算法，网易喜欢问框架。面试完没有整理，很多都忘了，把自己记得写了下来。

了解我们公司是做什么的吗
年终考核和绩效挂钩吗 拿了什么 为什么
为什么想要离开现在的公司
为什么对区块链这么有信仰
对未来的规划是什么
可以接受先做开发后面再接触钱包相关的吗
对加班的态度怎样
现在的薪资及期望薪资

平时有哪些兴趣爱好
对技术了解如何
现在的面试情况
为什么想要跳槽
有什么想要问我的
离职原因，期望薪资，现在薪资，手头offer等等。
1 我是裸辞的 就是提了离职才开始找工作的 对于那些很讨厌自己一个人待在家里的人非常不建议（比如我）但是其实也可以尝试一下 嘿嘿 毕竟也算比较新奇的体验 反正就是要考虑清楚啦
2 面试的时候最好从难度简单的开始 一开始就大厂 容易把自己搞自闭 而且浪费机会 就是循序渐进
3 面试后最好做一下记录 至少要复盘一下自己答得不好得 去弄明白 很大概率下个面试官还问。。。
4 面试其实也是个展现自我的过程 就是和面试官的沟通和交流也挺重要的 答不上来也没啥 但要让面试官知道你比较努力。。。（这一点面几家就会有感觉了）
5 社招和校招还是不太一样的 社招背景契合会更容易进一些 背景不契合，比如区块链那些都是一面卒 自动驾驶直接简历关都没过。。。 对自己的职业规划要有点B数 虽然也不一定会一直当打工人
6 就是要广撒网 这样才会心态平和 不会患得患失 如果很自闭 就休息休息 或者找朋友倾诉倾诉 然后继续战斗！
7 关于面经 其实我是在准备阶段 就是几个月前看了几篇 开始面试后一篇都没看过。。。这个仁者见仁 智者见智 不过我的面经还是可以看一看的 嘿嘿（觉得自己好有文采.jpg

蚂蚁的面试官感觉挺有水平的 会问你擅长哪些技术 聊了差不多四十分钟 二十分钟项目 二十分钟技术 你答不上来也会引导你 是我这次面试体验里边最好的了 一面应该是过了 看面试官什么时候联系我二面 有后续的话我可以再更新